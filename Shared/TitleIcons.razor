@using JobHunter.Models
    <span>
        @foreach (var btn in buttons)
        {
            <a href="@btn.Action"><img src='Images/Icons/@btn.GetImage(@Icon, 0)' href="@btn.Action" title="@btn.ToolTip" style="width: @IconWidth"
                                       onmouseover="@btn.GetMouseOver()" onmouseout="@btn.GetMouseOut()"/></a>
        }
    </span>



@code {
    [Parameter]
    public string Title { get; set; }

    [Parameter]
    public string IconWidth { get; set; }

    [Parameter]
    public string Icon { get; set; } = "Add";

    [Parameter]
    public string Id { get; set; }

    private List<ImgButton> buttons = new List<ImgButton>();


    protected override void OnParametersSet()
    {
        switch (Title.ToLower())
        {
            case "companies":
                buttons.Add(new ImgButton("Add", "CompanyEdit", "Add a company to the list"));
                break;

            case "contacts":
                buttons.Add(new ImgButton("Add", "ContactEdit", "Add a contact to the list"));
                break;

            case "campaigns":
                buttons.Add(new ImgButton("Add", "CampaignEdit", "Add a campaign to the list"));
                break;

            case "view campaign":
                int id = Convert.ToInt32(Id);
                buttons.Add(new ImgButton(Icon, $"CampaignEdit/{Id}", $"Edit this campaign"));
                break;
        }

    }
}