@using BlueSite.Data.Entities
    <tr class="todo-list">
        <td style="width: 100px;"><img src="@imgSource" @onclick='eventArgs => OnChangeCallback.InvokeAsync($"{Index}|done|{((Checked == "0") ? "1" : "0")}")' style="width: 30px" /></td>
        <td><input type="text" class="@inputClasses" @onchange='eventArgs => OnChangeCallback.InvokeAsync($"{Index}|title|{eventArgs.Value.ToString()}")' value="@Action.Title" /></td>
        <td style="width: 100px; padding: 0px 20px 0px 4px"><InlineToolBar Index="@Index" Action="@Action" OnChangeCallback="@OnRowOptionCallback" Width="86px" /></td>
    </tr>

@code {
        [Parameter]
        public ActionItem Action { get; set; }

        [Parameter]
        public string Index { get; set; }

        [Parameter]
        public EventCallback<string> OnClickCallback { get; set; }

        [Parameter]
        public EventCallback<string> OnChangeCallback { get; set; }

        [Parameter]
        public EventCallback<string> OnRowOptionCallback { get; set; }

    string inputClasses = "form-control to-do";
    string imgSource    = "images/checkbox-0.png";

    string Checked = "0";
    bool HasNotes = false;

    private void CaptionChanged(int index, string text)
    {
        Action.Title = text;
        StateHasChanged();
    }

    protected override void OnParametersSet()
    {
        if (Action.IsDone)
        {
            Checked = "1";
            inputClasses = "form-control to-do todo-done";
            imgSource    = "images/checkbox-1.png";
        }
        else
        {
            Checked = "0";
            inputClasses = "form-control to-do";
            imgSource = "images/checkbox-0.png";
        }
    }

}
