@using JobHunter.Models
@using JobHunter.Application
@using BlueSite.Data.Entities

    <div class="form-group">
        @if (Caption != null) 
        {
            <label class="form-label" for="@Id">@Caption</label><br />
        }
        <table class="form-control nomargin" cellspacing='0' cellpadding='0' border='0' style="min-width: 350px; height: 30px;">
            <tr height="28px">
                <td width="100%" style=" padding: 0; white-space: nowrap; ">
                    <input type="text" @bind-value="Phone.Number" class="form-control inset phone-number noborder" /> 
                    <input type="text" @bind-value="Phone.Ext"    class="form-control inset phone-number noborder" style="min-width:  50px; max-width:  70px;" />
                </td>
                <td style="padding: 0;">
                    <div class="select-control link select-large noborder" id="@PhoneId"
                         @onclick="handleClick"
                         style="width: 75px; height: 28px; float: right; text-align: right;">
                        @Utilities.GetFriendlyDDName(Phone.Type, PhoneTypes)
                    </div>
                </td>
            </tr>
        </table>
    </div>


@code {

    [Parameter]
    public string Id { get; set; }

    [Parameter]
    public string Caption { get; set; }

    [Parameter]
    public int Index {  get; set; } = -1;

    [Parameter]
    public string Width { get; set; }

    [Parameter]
    public Phone Phone { get; set; }

    [Parameter]
    public List<DDOption> PhoneTypes { get; set; }

    [Parameter]
    public EventCallback HandleEventClick { get; set; }

    protected string PhoneId;

    protected void handleClick()
    {
        Globals.CurrentPhoneIndex = Index;
        HandleEventClick.InvokeAsync("");
    }

    protected override void OnParametersSet()
    {
        base.OnParametersSet();
        if (Phone == null)
        {
            Phone = new Phone("", "main");
        }
        PhoneId = (Index >= 0) ? $"{Id}-{Index.ToString()}" : Id;
    }

}
