@using BlueSite.Components
@using BlueSite.Data
@using BlueSite.Data.Entities
@using JobHunter.Pages
@using JobHunter.Services

@inject BlueSiteContext _context
@inject BrowserService _browser

<BsDialog @ref="dialog" DlgTitle="Add Relationship" Style="@Style"
          DlgOnClickCallback="@OnClickCallback"
          Buttons="">

    <ScrollableDiv Id="new-contact" Height="490px">
        <ContactEdit @ref="contactForm" ParentDialog="@this" IsPartial="true" />
    </ScrollableDiv>

</BsDialog>


@code {

    [Parameter]
    public EventCallback<string> OnClickCallback { get; set; }

    [Parameter]
    public string Style { get; set; }

    [Parameter]
    public CompaniesBase Parent { get; set; } = null;

    public int CompanyId { get; set; } = -1;

    protected List<Contact> Contacts { get; set; } = new List<Contact>();

    private ContactEdit contactForm { get; set; }

    BsDialog dialog;
    JobHuntRepository Repository;

    protected override void OnInitialized()
    {
        Repository = new JobHuntRepository(_context);
    }

    protected override void OnParametersSet()
    {
        base.OnParametersSet();
    }

    protected override Task OnAfterRenderAsync(bool firstRender)
    {
        // _ = _browser.CenterElement();
        return _browser.CenterElement();
    }

    public void Show()
    {
        contactForm.Clear();
        contactForm.setCompanyId(CompanyId);
        dialog.Show();
        if (CompanyId >= 0)
        {
            Contacts = Repository.GetUnrelatedCompanyContacts(CompanyId);
            StateHasChanged();
        }
    }

    public void Hide()
    {
        dialog.Hide();
        OnClickCallback.InvokeAsync("changed");
    }

}
